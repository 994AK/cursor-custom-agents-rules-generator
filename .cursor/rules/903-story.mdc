---
description: ALWAYS use when creating or updating story files to ensure proper tracking and implementation. This rule enforces consistent story structure with tasks, context, and progress tracking.
globs: **/*.story.md
---
# Story Template Standards

<version>1.0.0</version>

## Requirements

- Follow standardized story structure
- Include all required sections
- Track progress accurately
- Maintain implementation history

## Story Structure

### Required Sections

#### 1. Header

Story {N}: {Title}

#### 2. Story Description

**As a** {role}
**I want** {action}
**so that** {benefit}

#### 3. Status

- Draft
- In Progress
- Complete
- Cancelled

#### 4. Context

- Background information
- Current state
- Story justification
- Technical context
- Business drivers
- Relevant history from previous stories

#### 5. Estimation

Story Points: {Story Points (1 SP = 1 day of Human Development = 10 minutes of AI development)}

#### 6. Tasks

##### Task Groups

1. - [ ] {Major Task Group 1}
   1. - [ ] {Test Subtasks (as needed)}
   2. - [ ] {Subtask}

Note: 
- Use - [x] for completed items
- Use ~~skipped/cancelled items~~
- Follow TDD - Start with Writing Tests Subtask

### 7. Additional Sections

#### Constraints
- List any technical or business constraints

#### Data Models / Schema
- Database schemas
- API request/response models
- Interfaces/types

#### Structure
- Module organization
- File structure plan

#### Diagrams
- Mermaid diagrams as needed

#### Dev Notes
- Implementation commentary
- Important considerations
- Technical decisions

#### Chat Command Log
- Commands from User
- Agent Question and Users Response

## Examples

<example>
# Story-1: Implement User Authentication API

## Story

**As a** user
**I want** to securely log into the system
**so that** I can access my protected resources

## Status

In Progress

## Context

The system currently lacks user authentication. We need to implement a secure login system using JWT tokens and follow OAuth2 best practices.

## Estimation

Story Points: 3

## Tasks

1. - [x] Setup Authentication Routes
   1. - [x] Create login endpoint
   2. - [x] Add input validation
   3. - [x] Write tests
2. - [ ] Implement JWT Handling
   1. - [ ] Add token generation
   2. - [ ] Setup token validation
   3. - [ ] Write tests

## Dev Notes

- Using jsonwebtoken package for JWT operations
- Token expiry set to 24 hours
- Implementing refresh token pattern

## Chat Command Log

- BMad: Lets Proceed with Drafting our first story
- Worf: Is the draft approved?
  - Bmad: Approved! Update story status to in progress and proceed!
- BMad: Great Job Worf, all tests are green, mark the story as complete and push all!
</example>

<example type="invalid">
Auth Story

todo:
- add login
- make it secure
- test stuff
</example>

